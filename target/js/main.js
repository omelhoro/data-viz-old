// Generated by CoffeeScript 1.8.0
(function() {
  var $, MAPS, append_map, chart_wrapper, create_menu, instant, menu, subchoice,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $ = jQuery;

  MAPS = {
    kosovo_tree: ["Kosovo-Tree", ['', "<h3>Events and Number of Docs</h3><div id='chart_div_anno'></div><div id=chart_div_org></div>"]],
    maxqda_docs: ["Respect-Docs", ["", 'html_']],
    corpus_of_syl: ["Syllables", ['d3', "htmlj<script type='text/javascript'>forerun_src='templates/corpus_of_sylls.html';predef=[['Russian influenced models','1|2|3'],['Western influenced models','4|5']];data_src='./static/public_data/syl_subset.csv'</script>"]],
    lima_design: ["Lima Project", ['', 'html_']],
    heatplot: ["Cards", ["d3", 'html_']],
    corpus_of_words: ["Child Corpus", ['d3', "htmlj<script type='text/javascript'>forerun_src='templates/corpus_of_words.html';predef=[['Task 4','*4'],['Task 5','*5'],['Task 6','*6']];data_src='./static/data/lima_corpus_group_lemmas.csv'</script>"]],
    rhythm: ["Rhythm & Biography", ['d3', '']],
    rhythm_dyn: ["Dynamics of Rhythm", ['', "<div id='chart_div_end'></div><button id='next-part' class='inter-chart'>Next participant</button><button id='toggle-basis' class='inter-chart'>Toggle letter-class</button><input class='nbin-field'  type=number value=5><button class='bin-update'>Update</button>"]],
    vot: ["VOT", ["d3 TODO: fixplot", 'htmlj']],
    formants: ["Formants", ["d3", 'html_']],
    cv_plot: ["CV-related", ["", 'html_']]
  };

  menu = $(".viz_menu");

  chart_wrapper = $("#chart_wrapper");

  append_map = function(target, el) {
    var content, dir, dom_target, js_lnk, js_target, name, viz_class, _ref, _ref1;
    chart_wrapper.empty();
    _ref = MAPS[target], name = _ref[0], (_ref1 = _ref[1], viz_class = _ref1[0], content = _ref1[1]);
    dom_target = $("<div id=chart_div></div>");
    chart_wrapper.append(dom_target);
    dom_target.prop("class", "").prop("style", "");
    js_target = target.split("_of")[0];
    js_lnk = $("<script type='text/javascript' src='target/js/" + js_target + ".js'></script>");
    dom_target.addClass(viz_class);
    ($('.nav > li')).each(function(i, e) {
      return ($(e)).removeClass('active');
    });
    if (el != null) {
      el.addClass("active");
    }
    if (content.indexOf("html") === 0) {
      dir = content[4] === "j" ? 'target' : 'templates';
      content = content.slice(5);
      $.get("" + dir + "/" + js_target + ".html", function(d) {
        return dom_target.html(d);
      });
    }
    chart_wrapper.append($(content));
    return chart_wrapper.append(js_lnk);
  };

  create_menu = function(sub_choice) {
    var filter_choice, k, l, lead_to, v;
    lead_to = function(target, el) {
      var lead;
      lead = function(e) {
        return append_map(target, el);
      };
      return lead;
    };
    filter_choice = sub_choice.length === 0 ? Object.keys(MAPS) : sub_choice;
    if (sub_choice.length === 1) {
      $(".navbar").remove();
      append_map(sub_choice[0]);
    }
    for (k in MAPS) {
      v = MAPS[k];
      if (__indexOf.call(filter_choice, k) >= 0) {
        l = $("<li id=" + k + "><a href='#'>" + v[0] + "</a></li>");
        l.click(lead_to(k, l));
        menu.append(l);
      }
    }
    if (__indexOf.call(sub_choice, instant) >= 0) {
      return ($("#" + instant)).click();
    } else {
      return ($("li", menu)).first().click();
    }
  };

  $(".jswarning").remove();

  subchoice = parent.viz_choice;

  instant = 'maxqda_docs';

  if (subchoice != null) {
    create_menu(subchoice);
  } else {
    create_menu([]);
  }

}).call(this);

//# sourceMappingURL=main.js.map
