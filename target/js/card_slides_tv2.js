// Generated by CoffeeScript 1.7.1
(function() {
  var $;

  $ = jQuery;

  $(function() {
    var Session, TableView;
    TableView = (function() {
      function TableView(data, biodata) {
        this.data = data;
        this.biodata = biodata;
        this.append_bio();
        this.make_table();
        $("input").last().click();
      }

      TableView.prototype.make_table = function() {
        var dt, i, j, r, t, tag, tr, v, _i, _j, _len, _len1, _ref;
        t = $("<table id='myTable' class='tablesorter'>");
        _ref = this.data;
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
          r = _ref[i];
          tr = $("<tr>");
          for (j = _j = 0, _len1 = r.length; _j < _len1; j = ++_j) {
            v = r[j];
            tag = i === 0 ? "<th>" : "<td>";
            dt = (function() {
              switch (v) {
                case "1":
                  return $(tag).prop("class", "cards known");
                case "0":
                  return $(tag).prop("class", "cards unknown");
                case "  ":
                  return $(tag).prop("class", "cards unknown");
                default:
                  return $(tag).prop("class", "parts " + r[0] + "i" + j).text(v);
              }
            })();
            tr.append(dt);
          }
          if (i === 0) {
            tr = $("<thead>").append(tr);
          }
          t.append(tr);
        }
        return $("#map").append(t);
      };

      TableView.prototype.insert_bio = function(colm, cat) {
        var part, searchKey, val, _i, _len, _ref, _results;
        _ref = this.biodata;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          part = _ref[_i];
          searchKey = part["ID"] + "i" + colm;
          val = part[cat];
          console.log($('.' + searchKey), searchKey);
          $('.' + searchKey).text(val);
          _results.push($("#myTable").tablesorter());
        }
        return _results;
      };

      TableView.prototype.append_bio = function() {
        var k, ktext, v, _ref;
        _ref = this.biodata[0];
        for (k in _ref) {
          v = _ref[k];
          ktext = "<input type='radio' name='card_sort' value='" + k + "'>" + k + "<br>";
          $("#map").append(ktext);
        }
        $("input[name='card_sort']").change((function(_this) {
          return function(e) {
            var cat;
            console.log("goio");
            cat = $(e.target).val();
            return _this.insert_bio(1, cat);
          };
        })(this));
        return console.log(this.biodata);
      };

      return TableView;

    })();
    Session = (function() {
      function Session(data, biodata) {
        this.data = data;
        this.biodata = biodata;
        this.make_rows();
      }

      Session.prototype.make_rows = function() {
        var ar, d_ar, k, p, table, v, words, _, _i, _len, _ref;
        d_ar = [];
        words = (function() {
          var _ref, _results;
          _ref = this.data[0];
          _results = [];
          for (k in _ref) {
            _ = _ref[k];
            if (k !== "part") {
              _results.push(k.slice(0, 3));
            }
          }
          return _results;
        }).call(this);
        words.unshift("Part", "Sort1", "Sort2");
        d_ar.push(words);
        _ref = this.data;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          p = _ref[_i];
          ar = (function() {
            var _results;
            _results = [];
            for (_ in p) {
              v = p[_];
              _results.push(v);
            }
            return _results;
          })();
          ar.splice(1, 0, Math.floor(Math.random() * ar.length), Math.floor(Math.random() * ar.length));
          d_ar.push(ar);
        }
        table = new TableView(d_ar, this.biodata);
        console.log($("#myTable"));
        return $("#myTable").tablesorter();
      };

      return Session;

    })();
    return d3.csv("data/card_slides.csv", function(data) {
      return d3.csv("data/lima_bio.csv", function(biodata) {
        var session;
        return session = new Session(data, biodata);
      });
    });
  });

}).call(this);

//# sourceMappingURL=card_slides_tv2.map
